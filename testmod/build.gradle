plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.spongepowered.mixin' version '0.7.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

def modid = "testmod"
version = "0.0.0"
group = mod_group_id

base {
    archivesName = "test"
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: mapping_channel, version: mapping_version

    copyIdeResources = true

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        configureEach {
            ideaModule = "${rootProject.name}.${project.name}.main"
            workingDirectory rootProject.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                testmod {
                    source sourceSets.main
                }
            }
        }

        client {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }

        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            workingDirectory project.file('run')

            args '--mod', "testmod", '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

sourceSets {
    main {
        resources { srcDir 'src/generated/resources' }
    }
}

repositories {
    mavenLocal()
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

//    implementation(fg.deobf("dev.dhyces.biomeextensions:biomeextensions-forge:1.20.1-1.0.0"))
    implementation(project(":api"))
    implementation(project(":core"))

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version   : minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version       : forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id              : modid, mod_name: "Test Mod", mod_license: "ARR", mod_version: mod_version,
            mod_authors         : mod_authors, mod_description: "Lorum ipsum", pack_format_number: pack_format_number,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

tasks.named('publish').configure {
    dependsOn 'reobfJar'
}

java.withSourcesJar()

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                'Specification-Title'     : modid,
                'Specification-Vendor'    : mod_authors,
                'Specification-Version'   : '1', // We are version 1 of ourselves
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_authors,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    finalizedBy 'reobfJar'
}